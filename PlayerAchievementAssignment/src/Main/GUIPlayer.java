/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.io.BufferedReader;
import java.io.FileReader;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Jaron Chen
 */
public class GUIPlayer extends javax.swing.JFrame {

    private ArrayList<Player> player = new ArrayList<Player>();
    private ArrayList<Achievement> achieve = new ArrayList<Achievement>();
    private CSVRead reader = new CSVRead();
    private int PlayerNumber = 0;
    
    /**
     * Creates new form GUIPlayer
     */
    public GUIPlayer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOutput = new javax.swing.JTable();
        btnReadFile = new javax.swing.JButton();
        lblFileLoc = new javax.swing.JLabel();
        txtFileLocation = new javax.swing.JTextField();
        lblOutput = new javax.swing.JLabel();
        btnDisplayPlayer = new javax.swing.JButton();
        spnPlayer = new javax.swing.JSpinner();
        lblPlayer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnExit.setText("Exit");
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
        });

        tblOutput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOutput);

        btnReadFile.setText("Read File");
        btnReadFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReadFileMouseClicked(evt);
            }
        });

        lblFileLoc.setText("File Location:");

        lblOutput.setText("Achievements");

        btnDisplayPlayer.setText("Display Player");
        btnDisplayPlayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDisplayPlayerMouseClicked(evt);
            }
        });

        lblPlayer.setText("Player:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblPlayer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDisplayPlayer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOutput)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblFileLoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReadFile)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(lblOutput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReadFile)
                    .addComponent(txtFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFileLoc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnDisplayPlayer)
                    .addComponent(spnPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlayer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        // exit button
        System.exit(0);
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnReadFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReadFileMouseClicked
        // runs the read code in the reader class
        reader.Read(txtFileLocation.getText());
        player = reader.ReturnPlayer();
        achieve = reader.ReturnAchievement();
        
        //Player temp = new Player();
        //String csvFile = txtFileLocation.getText();
        //try
        //{
        //    br = new BufferedReader(new FileReader(csvFile));
        //    while ((line = br.readLine()) != null) 
        //    {
        //        String[] Data = line.split(SplitBy);
        //        if ("Player".equals(Data[0])) 
        //        {
        //            temp.clearAchievements();
        //            temp.setUsername(Data[1]);
        //            temp.setTagName(Data[2]);
        //        }
        //        else if ("Achievement".equals(Data[0])) 
        //        {
        //            temp.addAchievements(Data[1], Integer.parseInt(Data[2]), Integer.parseInt(Data[3]));
        //        }
        //        else
        //        {
        //            System.out.println("Unexpected Object Type:"+Data[0]);
        //        }
        //        if (temp.GetAchievements().size() == 5) {
        //            player.add(new Player(temp.getUsername(),temp.getTagName()));
        //            for (int i = 0; i <temp.GetAchievements().size(); i++) {
        //                achieve.add(new Achievement(temp.GetAchievements().get(i).getDescription(),temp.GetAchievements().get(i).getLevel(),temp.GetAchievements().get(i).getMaxLevel(),temp.GetAchievements().get(i).getUsername()));
        //            }
        //            temp.clearAchievements();
        //        }
        //    }
        //}
        //catch(Exception ex)
        //{
        //    System.out.println(ex.toString());
        //}
    }//GEN-LAST:event_btnReadFileMouseClicked

    private void btnDisplayPlayerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDisplayPlayerMouseClicked
        // TODO add your handling code here:   
        PlayerNumber = (int)spnPlayer.getValue();
        if (PlayerNumber < player.size()) {
            DefaultTableModel dm = new DefaultTableModel(0, 0);
            Player tempPlyr = player.get(PlayerNumber);
            Achievement tempAchv = new Achievement();
            Achievement tempAchvFinal = new Achievement();
            DateFormat df = new SimpleDateFormat("dd/MM/yy HH:mm:ss"); 
            Calendar cal = Calendar.getInstance();
            String header[] = new String[]{"Description", "Level", "Out of Possible"};
            dm.setColumnIdentifiers(header);
            tblOutput.setModel(dm);
            for (int j = 0; j < achieve.size(); j++) {
                 tempAchv = achieve.get(j);
                 if (tempAchv.getUsername().equals(tempPlyr.getUsername())) {
                    tempAchvFinal = tempAchv;
                    dm.addRow(new String[]{tempAchvFinal.getDescription(),Integer.toString(tempAchvFinal.getLevel()),Integer.toString(tempAchvFinal.getMaxLevel())});
                }
            }
            lblOutput.setText("Achievements For "+ tempPlyr.getTagName()+ " at "+ df.format(cal.getTime()));
        }
        else
        {
            JOptionPane.showMessageDialog(null, "There are no players at the selected number.", "InfoBox", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDisplayPlayerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIPlayer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisplayPlayer;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnReadFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFileLoc;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblPlayer;
    private javax.swing.JSpinner spnPlayer;
    private javax.swing.JTable tblOutput;
    private javax.swing.JTextField txtFileLocation;
    // End of variables declaration//GEN-END:variables
}

